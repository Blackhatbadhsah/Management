
@page "/register"
@using EmployeeManagement.Shared.Enums;
@inject NavigationManager _nav
@inject IJSRuntime JSRuntime

<PageTitle>Login</PageTitle>
<AuthorizeView Policy="Supervisor">
    <Authorized>
        <div class="form-floating">
            <form @onsubmit="RegisterAsync">
                <div class="form-group form-outline mb-4">
                    <label for="username">Username:</label>
                    <input type="text" required id="username" @bind="RegisterModel.UserName" />
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="email">Email:</label>
                    <input type="email" required id="email" @bind="RegisterModel.Email" />
                </div >
                <div class="form-group form-outline mb-4">
                    <label  for="firstname">First name:</label>
                    <input type="text" required  id="firstname" @bind="RegisterModel.FirstName" />
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="middlename">Middle name:</label>
                    <input type="text" id="middlename" @bind="RegisterModel.MiddleName" />
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="lastname">Last name:</label>
                    <input type="text" required id="lastname" @bind="RegisterModel.LastName" />
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="password">Password:</label>
                    <input type="password" required id="password" @bind="RegisterModel.Password" />
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="password2">Confirm Password:</label>
                    <input type="password" required id="Password2" @bind="RegisterModel.ConfirmPassword" />
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="dateofbirth">Date of birth:</label>
                    <input type="date" required id="dateofbirth" @bind="RegisterModel.DateOfBirth" />
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="dateofjoining">Date of joining:</label>
                    <input type="date" required id="dateofjoining" @bind="RegisterModel.DateOfJoining" />
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="dateofmarriage">Date of marriage:</label>
                    <input type="date" id="dateofmarriage" @bind="RegisterModel.DateOfMarriage" />
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="depatment">Department:</label>
                    <select required @bind="DepartmentSelectedValue">
                        @foreach (var value in Enum.GetValues(typeof(Department)))
                        {
                            <option value="@value">@value</option>
                        }
                    </select>
                    
                </div>
                <div class="form-group form-outline mb-4">
                    <label for="employeeType">Employee Type:</label>
                    <select required @bind="EmployeeTypeSelectedValue">
                        @foreach (var value in Enum.GetValues(typeof(EmployeeType)))
                        {
                            <option value="@value">@value</option>
                        }
                    </select>

                </div>
                <div class="form-group form-outline mb-4">
                    <label for="role">Role:</label>
                    <select required @bind="RoleSelectedValue">
                        @foreach (var value in Enum.GetValues(typeof(Roles)))
                        {
                            <option value="@value">@value</option>
                        }
                    </select>

                </div>
                               
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
        
    </Authorized>
    <NotAuthorized>
        @{
            _nav.NavigateTo("/home");
        }

    </NotAuthorized>
</AuthorizeView>
